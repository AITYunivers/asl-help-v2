<Project>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">

    <!-- Gather libraries to include in merge. -->
    <PropertyGroup>
      <ProjectReferences>@(ReferencePath-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;'%(FileName)%(Extension)', ' ')</ProjectReferences>
    </PropertyGroup>

    <!-- Execute ILMerge with the necessary dependencies. -->
    <Exec WorkingDirectory="$(OutDir)"
          Command="
      $(ILMergeConsolePath) ^
      /out:$(LibraryName).dll ^
      AslHelp.Build.dll $(ProjectReferences) ^
      CommunityToolkit.HighPerformance.dll System.Buffers.dll System.Memory.dll System.Numerics.Vectors.dll System.Runtime.CompilerServices.Unsafe.dll
    " />

    <!-- Find LiveSplit directory from .lsdir (if existent). -->
    <!-- First, read the lines in the file. There may be more than one. We expect the directory to be the first. -->
    <ReadLinesFromFile File="$(SolutionDir)\.lsdir">
      <Output ItemName="LsDirLines" TaskParameter="Lines" />
    </ReadLinesFromFile>

    <!-- %(Lines.Identity) returns the last non-empty line. Therefore, we must first reverse the lines. -->
    <ItemGroup>
      <LsDirLinesReversed Include="@(LsDirLines-&gt;Reverse())" />
    </ItemGroup>

    <!-- Then, get the first line and remove any trailing path separators. -->
    <PropertyGroup>
      <LiveSplitDir>%(LsDirLinesReversed.Identity)</LiveSplitDir>
      <LiveSplitDir>$(LiveSplitDir.Replace('/', '\').TrimEnd('\'))</LiveSplitDir>
    </PropertyGroup>

    <!-- Move the merged asl-help.dll to the LiveSplit/Components directory. -->
    <Move Condition="Exists('$(LiveSplitDir)\LiveSplit.exe')"
          SourceFiles="$(OutDir)\$(LibraryName).dll"
          DestinationFiles="$(LiveSplitDir)\Components\$(LibraryName)" />

  </Target>

</Project>
